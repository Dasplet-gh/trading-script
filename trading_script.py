import keyboard
import threading
import signal
import os
import mouse
import time

HOTKEY_EXIT = "Shift+Esc"
HOTKEY_STOP_OR_START = "Shift+b"
WAIT_FOR_KEY_SECONDS = 2

"""
  * ===================================================== Функции ======================================================
"""

# ======== Функция ожидающая остановки скрипта
def script_exit():
    keyboard.wait(HOTKEY_EXIT)
    os.kill(os.getpid(), signal.SIGINT)

# ======== Функция получающая число из ввода, при заданом условии
def get_number_from_input(condition, error_msg):
    number = 0
    # Пока введённое значение не число или не подходит
    while condition(number):
        try:
            number = int(input())
            if condition(number):
                raise ValueError
        except ValueError:
            print(error_msg)
    return number

#  ======== Функция ожидающая нажатие клавиш(и) определённое количество секунд
def wait_for_key(hotkey, timeout_seconds):
    start_time = time.time()
    # Проверка нажат ли хоткей в течении определённого времени
    while time.time() - start_time < timeout_seconds:
        if keyboard.is_pressed(hotkey):
            return True
    return False

"""
  * =================================================== Основной код ===================================================
"""

if __name__ == "__main__":
    # Предупреждение
    print("Предупреждение:\n"
          "Перед использованием, пожалуйста, прочитайте инструкцию в README.md в репозитории по ссыле:\n"
          "https://github.com/Duriatt/Trading-Script\n")

    # Создание возможности закрыть скрипт  -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 1

    # Создание потока для функции script_exit
    thread_exit = threading.Thread(target=script_exit)
    # Запуск потока
    thread_exit.start()

    # Объявление
    print(f"Нажмите {HOTKEY_EXIT} для остановки работы скрипта.\n")

    # Получение номера монитора пользователя -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 2
    print("Введите номер монитора на котором запущен Minecraft:")
    error_msg = "Требуется ввести целое число от еденицы:"
    monitor_number = get_number_from_input((lambda x: x < 1), error_msg)

    # Получение размера интерфейса пользователя в Minecraft  -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 3
    # print("Введите размер интерфейса в Minecraft:")
    # error_msg = "Требуется ввести целое число от еденицы до четырёх включительно:"
    # INTERFACE_SIZE = get_number_from_input((lambda x: not (1 <= x <= 7)), error_msg)

    # Получение номера торгового слота -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 4
    print("Введите номер торгового слота жителя:")
    error_msg = "Требуется ввести целое число от еденицы до семи включительно:"
    trade_cell_number = get_number_from_input((lambda x: not (1 <= x <= 7)), error_msg)

    # Получение количество покупок -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 5
    print("Введите количество покупок, то сколько раз вы поторгуете с жителем, введите -1 для бесконечной торговли:")
    error_msg = "Требуется ввести целое число от еденицы, введите -1 для бесконечной торговли:"
    trade_count = get_number_from_input((lambda x: x < -1 or x == 0), error_msg)

    print(monitor_number, trade_cell_number, trade_count)

    # Координаты -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 6
    start_x = (monitor_number - 1) * 1920

    # Координаты кнопкок трейда на экране
    cords_trade_buttons = {}
    for i in range(7):
        cords_trade_buttons[1] = [start_x + 680, 370]

    # Координаты ячейки с подтверждением сделки на экране
    cords_trade_confirmation_cell = [start_x + 680, 370]

    # Предупреждение и декоративная загрузка -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 7
    print("\nПеред тем как начать торговать, вы должны прицелиться в середину нижней половины сундука-ловушки!\n"
          "Остановить торговлю можно только в двух секундной паузе между циклами торговли "
          "(после выхода из меню жителя).\n")

    for _ in range(3):
        print(".", end="")
        time.sleep(0.5)
    print("\n")

    # Прочие переменные  -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 8

    # Статус
    is_works = False

    # Объявление -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 9
    print(f"Готово к работе! Нажмите {HOTKEY_STOP_OR_START}, чтобы начать/остановить торговлю.")

    # Основной цикл работы скрипта  -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 10
    while True:
        # Количество циклов трейда
        count = trade_count
        while count != 0:
            # Основной алгоритм если скрипт включен -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 11
            if is_works:

                print(mouse.get_position())
                time.sleep(1)

                count -= 1
                print(f"- Покупка {trade_count - count} выполнена.")

            # Запуск или остановка торговли -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 12
            if not is_works or wait_for_key(HOTKEY_STOP_OR_START, WAIT_FOR_KEY_SECONDS):
                # Если торговля остановлена, то ожидание её возобновления
                print("- Ожидание возобновления торговли.")
                keyboard.wait(HOTKEY_STOP_OR_START)
                is_works = True

        # Получение количество покупок  -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 13
        print("Требуемое количество покупок было сделано.\nВведите следующее количество покупок:")
        error_msg = "Требуется ввести целое число от еденицы, введите -1 для бесконечной торговли:"
        trade_count = get_number_from_input((lambda x: x < -1 or x == 0), error_msg)

# keyboard.send('e')
# mouse.move(cord_num[i][0], cord_num[i][1])
# mouse.click('left')
